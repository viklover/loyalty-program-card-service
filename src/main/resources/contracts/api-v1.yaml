openapi: '3.0.3'
info:
  version: 0.0.1
  title: Cards Service
servers:
  - url: http://localhost/api/v1
    description: local

paths:
  /cards:
    post:
      tags:
        - "Cards"
      summary: "Generate a range of cards"
      parameters:
        - name: range
          in: query
          description: "Range of cards to be created"
          schema:
            type: integer
      responses:
        "200":
          description: "Task has been created"

  /cards/release/{customerId}/{cardId}:
    post:
      tags:
        - "Cards"
      summary: "Release a card to customer"
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/cardId'
      responses:
        "200":
          description: "Card has been released"
        "400":
          description: "Invalid customerId or cardId parameters"
        "404":
          description: "Card or customer not found"
  /cards/block/{cardId}:
    post:
      tags:
        - "Cards"
      summary: "Card blocking by the customer or user"
      parameters:
        - $ref: '#/components/parameters/cardId'
      responses:
        "200":
          description: "Card has been blocked"
        "400":
          description: "Invalid cardId parameter"
        "404":
          description: "Card not found"

  /cards/list:
    get:
      tags:
        - "Cards"
      summary: "Getting a list of all cards"
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        "200":
          description: "Successful"

  /cards/list/free:
    get:
      tags:
        - "Cards"
      summary: "Getting a list of free cards"
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        "200":
          description: "Successful"

  /healthcheck:
    get:
      tags:
        - "Service"
      summary: "Check service functionality"
      responses:
        "200":
          description: "I'm alive"

components:
  parameters:
    customerId:
      name: customerId
      in: path
      description: "Customer identifier"
      required: true
      schema:
        type: integer
    cardId:
      name: cardId
      in: path
      description: "Card identifier"
      required: true
      schema:
        type: integer
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer

