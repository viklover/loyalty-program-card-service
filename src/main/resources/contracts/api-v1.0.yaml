openapi: '3.0.3'
info:
  version: 0.0.1
  title: Cards Service
servers:
  - url: http://localhost:8000/api/v1
    description: local

paths:
  /cards:
    post:
      tags:
        - "Cards"
      summary: "Generate a range of cards"
      operationId: generateCards
      parameters:
        - name: range
          in: query
          description: "Range of cards to be created"
          example: 50
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "Task has been created"

  /cards/release/{cardId}/{customerId}:
    post:
      tags:
        - "Cards"
      summary: "Release a card to customer"
      operationId: releaseCard
      parameters:
        - $ref: '#/components/parameters/cardId'
        - $ref: '#/components/parameters/customerId'
      responses:
        "200":
          description: "Card has been released"
        "404":
          description: "Card not found"
        "406":
          description: "Card is already owned by another customer"
        "412":
          description: "Card is blocked now"
  /cards/block/{cardId}:
    post:
      tags:
        - "Cards"
      summary: "Card blocking by the customer or user"
      operationId: blockCard
      parameters:
        - $ref: '#/components/parameters/cardId'
      responses:
        "200":
          description: "Card has been blocked"
        "404":
          description: "Card not found"
        "406":
          description: "Card is already blocked now"
        "425":
          description: "Impossible to block unreleased card"

  /cards/list:
    get:
      tags:
        - "Cards"
      summary: "Getting a list of all cards"
      operationId: getCards
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        "200":
          description: "Successful"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardDto'

  /cards/list/free:
    get:
      tags:
        - "Cards"
      summary: "Getting a list of free cards"
      operationId: getFreeCards
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        "200":
          description: "Successful"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FreeCardDto'

components:
  schemas:
    CardDto:
      type: object
      required:
        - id
        - number
        - createdAt
        - releasedAt
        - blockedAt
        - status
        - customerId
      properties:
        id:
          type: integer
          format: int64
          example: 12
        number:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        status:
          type: string
          example: CREATED
        customerId:
          type: integer
          format: int64
          example: 6
          nullable: true
        createdAt:
          type: string
          example: 2023-12-08 12:30:06.292803
        releasedAt:
          type: string
          example: 2023-12-08 12:56:06.765695
          nullable: true
        blockedAt:
          type: string
          example: 2023-12-08 13:02:12.512280
          nullable: true
    FreeCardDto:
      type: object
      required:
        - id
        - number
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          example: 9
        number:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        createdAt:
          type: string
          example: 2023-12-08 12:30:06.292803
  parameters:
      customerId:
        name: customerId
        in: path
        description: "Customer identifier"
        example: 6
        required: true
        schema:
          type: integer
          format: int64
      cardId:
        name: cardId
        in: path
        description: "Card identifier"
        example: 12
        required: true
        schema:
          type: integer
          format: int64
      limit:
        name: limit
        in: query
        required: false
        example: 50
        schema:
          type: integer
      offset:
        name: offset
        in: query
        required: false
        example: 0
        schema:
          type: integer

